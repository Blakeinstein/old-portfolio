---
import GhostButton from "../Common/GhostButton.astro";
export interface Props {
  image: string;
  name: string;
  languages: string;
  libraries: string;
  desc: string;
  href: string;
}

let { image, name, languages, libraries, desc, href } = Astro.props as Props;
---
<style global lang="scss">
$easing: cubic-bezier(0.19, 1, 0.22, 1);
$card-background: rgba(0, 0, 0, 0.2);

.card {
  position: relative;
  display: flex;
  align-items: flex-end;
  overflow: hidden;
  padding: 1rem;
  height: auto;
  width: 400px;
  text-align: center;
  margin: 1em;
  color: whitesmoke;
  border-radius: 5px;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.1),
    0 8px 8px rgba(0, 0, 0, 0.1), 0 16px 16px rgba(0, 0, 0, 0.1);

  @media only screen and (min-width: 600px) {
    height: 500px;
    margin: 0;
  }

  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 110%;
    background-size: cover;
    background-position: 0 0;
    transition: transform 1s $easing;
    background: $card-background;
    pointer-events: none;
  }

  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 200%;
    pointer-events: none;
    background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.009) 11.7%,
      rgba(0, 0, 0, 0.034) 22.1%,
      rgba(0, 0, 0, 0.072) 31.2%,
      rgba(0, 0, 0, 0.123) 39.4%,
      rgba(0, 0, 0, 0.182) 46.6%,
      rgba(0, 0, 0, 0.249) 53.1%,
      rgba(0, 0, 0, 0.32) 58.9%,
      rgba(0, 0, 0, 0.394) 64.3%,
      rgba(0, 0, 0, 0.468) 69.3%,
      rgba(0, 0, 0, 0.54) 74.1%,
      rgba(0, 0, 0, 0.607) 78.8%,
      rgba(0, 0, 0, 0.668) 83.6%,
      rgba(0, 0, 0, 0.721) 88.7%,
      rgba(0, 0, 0, 0.762) 94.1%,
      rgba(0, 0, 0, 0.79) 100%
    );
    transform: translateY(-50%);
    transition: transform 1.3s $easing;
  }

  @media (hover: hover) {
    &:hover,
    &:focus-within {
      align-items: center;
      &:before {
        transform: translateY(-4%);
      }
      &:after {
        transform: translateY(-50%);
      }

      > .content {
        transform: translateY(0);
        transition-delay: 0.1s;

        > .name {
          height: initial;
        }

        > *:not(.name) {
          opacity: 1;
        }
      }
    }

    &:focus-within {
      &:before,
      &:after,
      > .content,
      > .content > *:not(.name, .preview-image) {
        transition-duration: 0;
      }
    }

    &:after {
      transform: translateY(0);
    }

    > .content {
      transform: translateY(50%);

      > *:not(.name, .preview-image) {
        opacity: 0;
        transform: translateY(1rem);
        transition: transform 0.7s $easing, opacity 0.7s $easing;
      }
    }
  }
  > .content {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 1;
    width: 100%;
    height: 100%;
    padding: 1rem;
    transition: transform 0.7s $easing;

    > * + * {
      margin-top: 1rem;
    }

    > .preview-image {
      display: block;
      img {
        height: 160px;
      }
    }

    > .name {
      font-size: 2.4em;
      font-weight: 600;
      // text-transform: uppercase;
    }

    > .tech {
      display: flex;
      flex-flow: column;
      align-items: center;
      font-size: 1.1em;
      width: 100%;
      justify-content: space-between;
      > .libraries {
        font-size: 0.7em;
      }
    }

    > .desc {
      font-size: 1.2em;
      font-style: italic;
      line-height: 1.2;
    }
  }
}
</style>

<div class="card">
  <div class="content">
    <div class="preview-image"><img src={image} alt={name}/></div>
    <div class="name">{name}</div>
    <div class="tech">
      <div class="languages">{languages}</div>
      <div class="libraries">{libraries}</div>
    </div>
    <div class="desc">{desc}</div>
    <GhostButton href={href}>View</GhostButton>
  </div>
</div>